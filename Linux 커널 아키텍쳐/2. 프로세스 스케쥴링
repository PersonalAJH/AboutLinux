사전 점유형 스케쥴링
- 리눅스 스케쥴러는 사전 점유형이다. -> 높은 우선순위의 프로세스가 준비되면 현재 실행중인 프로세스를 "중단"하고 새 프로세스에 CPU를 할당

우선 순위 기반 스케쥴링
- 프로세스는 각기 다른 우선순위를 갖고 있으며 리눅스 스케쥴러는 우선순위에 따라 프로세스에 CPU 시간을 할당한다. 

시간 할당량(Time slice)
- 각 프로세스는 시간 할당량, 또는 타임 슬라이스 라고 불리는 일정 시간 동안 CPU를 사용할 권리를 갖는다. 타임 슬라이스는 프로세스의 우선순위에 따라 달라질 수 있다.

완전 공정 스케쥴러
- 리눅스 2.6.23 이후의 주요 스케쥴러는 CFS 입니다. CFS 는 가상 런타임 개념을 사용하여 모든 프로세서에 공정하게 CPU 시간을 분배한다. 







리눅스 시분할(time-sharing) 방식

리눅스의 시분할(time-sharing) 방식은 CPU 시간을 여러 프로세스 간에 공정하게 분배하는 스케줄링 방식입니다. 
이 방식은 멀티태스킹을 가능하게 하고, 사용자 입장에서는 여러 프로그램이 동시에 실행되는 것처럼 느껴지게 합니다

Linux time-sharing 작동 방식
1. 스케쥴링 : 스케쥴러는 실행 대기중인 프로세스 목록을 관리하고 어떤 프로세스가 다음에 CPU를 사용할 지 결정
2. 컨텍스트 스위칭(Context switching) : 한 프로세스의 CPU 사용 시간이 끝나면 시스템은 현재 프로세스의 상태를 저장하고 다음 프로세스의 상태를 로드합니다. 
3. 타임 슬라이스 할당 : 각 프로세스는 타임 슬라이스 동안 CPU를 사용하며, 이 기간이 끝나면 다음 프로세스로 전환됩니다 .

리눅스의 Time-sharing scheduling
- 리눅스는 완전 공정 스케쥴려(Completely Fair Scheduler, CFS) 를 사용하여 프로세서의 CPU 시간을 배분합니다. CFS 는 각 프로세스가 공정하게 CPU 시간을 사용할 수 있도록 설계되었습니다. 
- CFS 는 가상 런타임 개념을 사용 하여 프로세스의 실행 시간을 추적합니다. 이를 통해 과도하게 CPU 를 사용한 프로세스는 낮은 우선순위를 받고 CPU 사용 시간이 적은 프로세스는 높은 우선순위를 받습니다. 