1. 리눅스 커널 아키텍처
커널의 기본 구조와 작동 원리를 이해합니다.
프로세스 관리, 메모리 관리, 인터럽트 처리 등 커널의 주요 기능에 대해 학습합니다.
2. 프로세스 스케줄링
리눅스의 프로세스 스케줄링 메커니즘과 다양한 스케줄링 알고리즘(예: CFS, O(1), SCHED_FIFO, SCHED_RR 등)을 이해합니다.
실시간 스케줄링 정책과 그 특성에 대해 학습합니다.
3. 실시간 시스템
실시간 시스템의 기본 개념과 요구 사항을 이해합니다.
하드 실시간과 소프트 실시간 시스템의 차이점을 학습합니다.
4. 멀티스레딩 및 병렬 처리
스레드의 개념과 멀티스레딩 프로그래밍에 대해 공부합니다.
병렬 처리와 그것이 시스템 성능에 미치는 영향을 이해합니다.
5. 리눅스 커널 프로그래밍
리눅스 커널 모듈 개발과 커널 내부 프로그래밍에 대해 학습합니다.
커널 내에서 스케줄링 관련 코드를 직접 탐색하고 분석합니다.
6. 성능 최적화 및 분석
시스템 성능 모니터링 도구(예: top, htop, vmstat, iostat)를 사용하여 시스템 성능을 분석합니다.
성능 병목 현상을 식별하고 최적화하는 방법을 학습합니다.
7. 실시간 리눅스 배포판
실시간 리눅스(RT Linux) 또는 PREEMPT_RT 패치와 같은 실시간 확장에 대해 공부합니다.
실시간 리눅스 배포판의 설치와 구성 방법을 학습합니다.




쉘 스크립트 기초

쉘 스크립트의 개념과 용도
기본적인 쉘 스크립트 구조 (쉬뱅, 주석 등)
쉘 스크립트 실행 방법 및 권한 설정
쉘 및 환경

쉘의 종류 (Bash, Zsh, Ksh 등) 및 특징
환경 변수와 쉘 변수의 이해
프로필과 환경 설정 파일 (.bashrc, .bash_profile 등)
기본 명령어

파일 및 디렉토리 관리 명령어 (ls, cd, mkdir, rm 등)
텍스트 처리 명령어 (echo, cat, grep, sed, awk 등)
프로세스 관리 명령어 (ps, top, kill 등)
스크립팅 요소

변수 선언과 사용
문자열, 숫자, 배열 다루기
쉘 확장 (brace expansion, tilde expansion 등)
흐름 제어 및 조건문

if, else, elif 조건문
case 문
논리 연산자 (&&, ||, ! 등)
반복문

for 반복문
while 반복문
until 반복문
함수

함수 정의 및 호출
함수 파라미터와 반환 값
범위(scope) 및 함수 내 변수 사용
고급 스크립팅

디버깅 및 오류 처리
스크립트 최적화 기법
정규 표현식 사용
실용적인 스크립트 예제

시스템 모니터링 스크립트
데이터 백업 및 복구 스크립트
사용자 관리 및 네트워크 관련 스크립트
보안 관련

스크립트 보안 고려사항
스크립트를 통한 시스템 보안 강화 방법


